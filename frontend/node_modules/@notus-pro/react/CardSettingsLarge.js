"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = CardSettingsLarge;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Button = _interopRequireDefault(require("./Button.js"));

var _Input = _interopRequireDefault(require("./Input.js"));

var _Select = _interopRequireDefault(require("./Select.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function CardSettingsLarge(_ref) {
  var title = _ref.title,
      button = _ref.button,
      forms = _ref.forms;
  var widths = {
    1: "lg:w-1/12",
    2: "lg:w-2/12",
    3: "lg:w-3/12",
    4: "lg:w-4/12",
    5: "lg:w-5/12",
    6: "lg:w-6/12",
    7: "lg:w-7/12",
    8: "lg:w-8/12",
    9: "lg:w-9/12",
    10: "lg:w-10/12",
    11: "lg:w-11/12",
    12: "lg:w-12/12"
  };
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
    className: "relative flex flex-col w-full mb-6 shadow-lg rounded-lg bg-white"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "mb-0 p-6 pb-0"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "text-center flex justify-between items-center"
  }, /*#__PURE__*/_react.default.createElement("h6", {
    className: "text-xl font-bold mb-0"
  }, title), /*#__PURE__*/_react.default.createElement(_Button.default, button))), /*#__PURE__*/_react.default.createElement("div", {
    className: "flex-auto px-6 pb-6 pt-0"
  }, /*#__PURE__*/_react.default.createElement("form", null, forms.map(function (prop, key) {
    return /*#__PURE__*/_react.default.createElement("div", {
      key: key
    }, /*#__PURE__*/_react.default.createElement("h6", {
      className: "mt-6 mb-2 font-bold"
    }, prop.title), /*#__PURE__*/_react.default.createElement("hr", {
      className: "mb-6 border-b-1 border-blueGray-200"
    }), /*#__PURE__*/_react.default.createElement("div", {
      className: "flex flex-wrap -mx-4"
    }, prop.inputs && prop.inputs.map(function (inputProp, inputKey) {
      return /*#__PURE__*/_react.default.createElement("div", {
        key: inputKey,
        className: "w-full px-4 " + widths[inputProp.width]
      }, /*#__PURE__*/_react.default.createElement("div", {
        className: "relative w-full mb-3"
      }, inputProp.label && /*#__PURE__*/_react.default.createElement("label", {
        className: "block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1",
        htmlFor: "grid-password"
      }, inputProp.label), inputProp.input && /*#__PURE__*/_react.default.createElement(_Input.default, inputProp.input), inputProp.select && /*#__PURE__*/_react.default.createElement(_Select.default, inputProp.select)));
    })));
  })))));
}

var inputsObject = {
  // NOTE: this width only applies on large devices
  width: _propTypes.default.oneOf([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),
  // if you wish, you can send somthing like
  // <span className="mr-2">Label Name</span><span className="text-red-500">*</span>
  // NOTE: the label tag will be auto generated
  label: _propTypes.default.node
};

var inputsShape = _propTypes.default.shape(_objectSpread(_objectSpread({}, inputsObject), {}, {
  // props to pass to the Input component
  input: _propTypes.default.object
}));

var selectsShape = _propTypes.default.shape(_objectSpread(_objectSpread({}, inputsObject), {}, {
  // props to pass to the Select component
  select: _propTypes.default.object
}));

var inputsTypes = _propTypes.default.arrayOf(_propTypes.default.oneOfType([inputsShape, selectsShape]));

CardSettingsLarge.defaultProps = {
  button: {},
  forms: []
};
CardSettingsLarge.propTypes = {
  title: _propTypes.default.string,
  // props to pass to the Button component
  button: _propTypes.default.object,
  forms: _propTypes.default.arrayOf(_propTypes.default.shape({
    title: _propTypes.default.string,
    inputs: inputsTypes
  }))
};
