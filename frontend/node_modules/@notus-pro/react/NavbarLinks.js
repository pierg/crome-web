"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = NavbarLinks;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactRouterDom = require("react-router-dom");

var _classnames = _interopRequireDefault(require("classnames"));

var _DropdownNavbar = _interopRequireDefault(require("./DropdownNavbar.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function NavbarLinks(_ref) {
  var leftLinks = _ref.leftLinks,
      rightLinks = _ref.rightLinks,
      logoImage = _ref.logoImage,
      logoText = _ref.logoText,
      logoLink = _ref.logoLink,
      socials = _ref.socials,
      color = _ref.color,
      type = _ref.type;

  var _React$useState = _react.default.useState(false),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      collapseOpen = _React$useState2[0],
      setCollapseOpen = _React$useState2[1];

  var _React$useState3 = _react.default.useState(undefined),
      _React$useState4 = _slicedToArray(_React$useState3, 2),
      collapseStyle = _React$useState4[0],
      setCollapseStyle = _React$useState4[1];

  var _React$useState5 = _react.default.useState(false),
      _React$useState6 = _slicedToArray(_React$useState5, 2),
      animation = _React$useState6[0],
      setAnimation = _React$useState6[1];

  var collapseRef = _react.default.useRef(null);

  var startAnitmation = function startAnitmation() {
    if (!animation) {
      setAnimation(true);

      if (collapseOpen) {
        setCollapseStyle(0);
        setTimeout(function () {
          setAnimation(false);
          setCollapseOpen(false);
        }, 310);
      } else {
        setCollapseOpen(true);
        setTimeout(function () {
          setCollapseStyle(collapseRef.current.scrollHeight);
        }, 10);
        setTimeout(function () {
          setAnimation(false);
        }, 310);
      }
    }
  };

  var brand = /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("img", {
    src: logoImage,
    className: "rounded-full mr-2",
    style: {
      width: "30px"
    }
  }), /*#__PURE__*/_react.default.createElement("span", null, logoText));

  var navBg = {
    dark: "bg-blueGray-800 shadow-md",
    light: "bg-blueGray-200 shadow-md",
    transparent: "lg:bg-transparent bg-white",
    white: "bg-white shadow-md",
    black: "bg-black shadow-md",
    blueGray: "bg-blueGray-500 shadow-md",
    red: "bg-red-500 shadow-md",
    orange: "bg-orange-500 shadow-md",
    amber: "bg-amber-500 shadow-md",
    emerald: "bg-emerald-500 shadow-md",
    teal: "bg-teal-500 shadow-md",
    lightBlue: "bg-lightBlue-500 shadow-md",
    indigo: "bg-indigo-500 shadow-md",
    purple: "bg-purple-500 shadow-md",
    pink: "bg-pink-500 shadow-md"
  };
  var linkColors = {
    light: "text-blueGray-500",
    dark: "text-white",
    transparent: "lg:text-white text-blueGray-500",
    white: "text-blueGray-500",
    black: "text-white",
    blueGray: "text-white",
    red: "text-white",
    orange: "text-white",
    amber: "text-white",
    emerald: "text-white",
    teal: "text-white",
    lightBlue: "text-white",
    indigo: "text-white",
    purple: "text-white",
    pink: "text-white"
  };
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("nav", {
    className: type + " w-full z-50 flex flex-wrap items-center justify-between px-2 py-3 mb-3 " + navBg[color]
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "flex container mx-auto flex flex-wrap items-center justify-between px-0 lg:px-4"
  }, logoLink && logoLink.to ? /*#__PURE__*/_react.default.createElement(_reactRouterDom.Link, _extends({}, logoLink, {
    className: "text-sm font-bold leading-relaxed inline-flex items-center mr-4 py-2 whitespace-nowrap uppercase " + linkColors[color]
  }), brand) : logoLink ? /*#__PURE__*/_react.default.createElement("a", _extends({}, logoLink, {
    className: "text-sm font-bold leading-relaxed inline-flex items-center mr-4 py-2 whitespace-nowrap uppercase " + linkColors[color]
  }), brand) : null, /*#__PURE__*/_react.default.createElement("button", {
    className: "ml-auto cursor-pointer text-xl leading-none px-3 py-1 border border-solid border-blueGray-400 rounded bg-transparent block outline-none focus:outline-none text-blueGray-300 lg:hidden",
    type: "button",
    onClick: startAnitmation
  }, /*#__PURE__*/_react.default.createElement("i", {
    className: "fas fa-bars"
  })), /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)("items-center w-full lg:flex lg:w-auto flex-grow duration-300 transition-all ease-in-out", {
      "block h-0": collapseOpen,
      hidden: !collapseOpen,
      "overflow-hidden": animation
    }),
    style: {
      height: collapseStyle
    },
    ref: collapseRef
  }, /*#__PURE__*/_react.default.createElement("ul", {
    className: "lg:items-center flex flex-wrap list-none pl-0 mb-0 flex flex-col list-none pl-0 mb-0 lg:flex-row"
  }, leftLinks.map(function (prop, key) {
    if (prop.to) {
      /*#__PURE__*/
      _react.default.createElement("li", {
        key: key
      }, /*#__PURE__*/_react.default.createElement(_reactRouterDom.Link, _extends({}, prop, {
        className: "hover:opacity-75 px-3 py-4 lg:py-2 flex items-center text-xs uppercase font-bold transition-all duration-150 ease-in-out " + linkColors[color]
      })));
    } else if (prop.dropdown) {
      return /*#__PURE__*/_react.default.createElement("li", {
        className: "relative",
        key: key
      }, /*#__PURE__*/_react.default.createElement(_DropdownNavbar.default, _extends({}, prop, {
        navColor: color
      })));
    } else {
      return /*#__PURE__*/_react.default.createElement("li", {
        key: key
      }, /*#__PURE__*/_react.default.createElement("a", _extends({}, prop, {
        className: "hover:opacity-75 px-3 py-4 lg:py-2 flex items-center text-xs uppercase font-bold transition-all duration-150 ease-in-out " + linkColors[color]
      })));
    }
  })), /*#__PURE__*/_react.default.createElement("ul", {
    className: "lg:items-center lg:ml-auto flex flex-wrap list-none pl-0 mb-0 flex flex-col list-none pl-0 mb-0 lg:flex-row"
  }, rightLinks.map(function (prop, key) {
    if (prop.to) {
      /*#__PURE__*/
      _react.default.createElement("li", {
        key: key
      }, /*#__PURE__*/_react.default.createElement(_reactRouterDom.Link, _extends({}, prop, {
        className: "hover:opacity-75 px-3 py-4 lg:py-2 flex items-center text-xs uppercase font-bold transition-all duration-150 ease-in-out " + linkColors[color]
      })));
    } else if (prop.dropdown) {
      return /*#__PURE__*/_react.default.createElement("li", {
        className: "relative",
        key: key
      }, /*#__PURE__*/_react.default.createElement(_DropdownNavbar.default, _extends({}, prop, {
        navColor: color
      })));
    } else {
      return /*#__PURE__*/_react.default.createElement("li", {
        key: key
      }, /*#__PURE__*/_react.default.createElement("a", _extends({}, prop, {
        className: "hover:opacity-75 px-3 py-4 lg:py-2 flex items-center text-xs uppercase font-bold transition-all duration-150 ease-in-out " + linkColors[color]
      })));
    }
  }), socials.map(function (prop, key) {
    return /*#__PURE__*/_react.default.createElement("li", {
      key: key
    }, /*#__PURE__*/_react.default.createElement("a", {
      className: "px-3 py-2 flex items-center text-xs uppercase font-bold leading-snug hover:opacity-75 transition-all duration-150 ease-in-out " + linkColors[color],
      href: prop.link,
      target: "_blank"
    }, /*#__PURE__*/_react.default.createElement("i", {
      className: "fab fa-" + prop.icon + " text-lg leading-lg opacity-75 hover:opacity-50 " + linkColors[color]
    }), /*#__PURE__*/_react.default.createElement("span", {
      className: "lg:hidden lg:ml-0 ml-2"
    }, prop.text)));
  }))))));
}

NavbarLinks.defaultProps = {
  leftLinks: [],
  rightLinks: [],
  socials: [],
  type: ""
};
NavbarLinks.propTypes = {
  logoImage: _propTypes.default.string,
  logoText: _propTypes.default.string,
  // properties to pass to the link object wrapping
  // the logoText and logoImage
  // if you pass a prop named to, the link will be
  // generated using Link from react-router-dom
  logoLink: _propTypes.default.object,
  color: _propTypes.default.oneOf(["dark", "light", "transparent", "white", "black", "blueGray", "red", "orange", "amber", "emerald", "teal", "lightBlue", "indigo", "purple", "pink"]),
  type: _propTypes.default.oneOf(["absolute", "fixed", ""]),
  // array of properties (for both, left and right Links)
  // to pass to the link object
  // if you pass a prop named to, the link will be
  // generated using Link from react-router-dom
  // NOTE: you can generate a dropdown if, inside the
  // // // object you pass dropdown: true as a prop
  // // // please check the DropdownNavbar to see
  // // // what the object should be in this case
  leftLinks: _propTypes.default.arrayOf(_propTypes.default.object),
  rightLinks: _propTypes.default.arrayOf(_propTypes.default.object),
  socials: _propTypes.default.arrayOf( // this will generate an anchor with target blank to the given link
  _propTypes.default.shape({
    icon: _propTypes.default.oneOf(["facebook", "twitter", "instagram", "dribbble", "github"]),
    link: _propTypes.default.string,
    // this will be visible only on mobile devices
    text: _propTypes.default.string
  }))
};
