"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ImageUpload;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Button = _interopRequireDefault(require("./Button.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function ImageUpload(_ref) {
  var placeholder = _ref.placeholder,
      changeButton = _ref.changeButton,
      removeButton = _ref.removeButton,
      onChange = _ref.onChange,
      onRemove = _ref.onRemove;

  // eslint-disable-next-line
  var _React$useState = _react.default.useState(null),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      file = _React$useState2[0],
      setFile = _React$useState2[1];

  var _React$useState3 = _react.default.useState(placeholder),
      _React$useState4 = _slicedToArray(_React$useState3, 2),
      imagePreviewUrl = _React$useState4[0],
      setImagePreviewUrl = _React$useState4[1];

  var fileInput = _react.default.useRef(null);

  var handleImageChange = function handleImageChange(e) {
    e.preventDefault();
    var reader = new FileReader();
    var file = e.target.files[0];

    reader.onloadend = function () {
      setFile(file);
      setImagePreviewUrl(reader.result);
      onChange(file, reader.result);
    };

    if (file) {
      reader.readAsDataURL(file);
    }
  };

  var handleClick = function handleClick() {
    fileInput.current.click();
  };

  var handleRemove = function handleRemove() {
    setFile(null);
    setImagePreviewUrl(placeholder);
    onRemove();
    fileInput.current.value = null;
  };

  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
    className: "text-center"
  }, /*#__PURE__*/_react.default.createElement("input", {
    className: "hidden",
    type: "file",
    onChange: handleImageChange,
    ref: fileInput
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: "rounded-full mx-auto shadow-lg rounded max-w-100-px mb-4"
  }, /*#__PURE__*/_react.default.createElement("img", {
    className: "rounded-full",
    src: imagePreviewUrl,
    alt: "..."
  })), /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement(_Button.default, _extends({}, changeButton, {
    onClick: handleClick
  })), /*#__PURE__*/_react.default.createElement(_Button.default, _extends({}, removeButton, {
    onClick: handleRemove
  })))));
}

ImageUpload.defaultProps = {
  changeButton: {},
  removeButton: {},
  onChange: function onChange() {},
  onRemove: function onRemove() {}
};
ImageUpload.propTypes = {
  // this is the default image that
  // appears when no image is uploaded
  placeholder: _propTypes.default.string,
  // props to pass to the change Button component
  changeButton: _propTypes.default.object,
  // props to pass to the remove Button component
  removeButton: _propTypes.default.object,
  // this function will get called when
  // clicking the changeButton
  // and it has two parameters, the image, and the image preview
  // example of usage: onChange={(image,imagePreviewUrl) => {console.log("image is :",image);console.log("image preview url is: ",imagePreviewUrl);}}
  onChange: _propTypes.default.func,
  // this function will get called when
  // clicking the removeButton, and does not have any params
  // example of usage: onRemove={() => console.log("remove happened")}
  onRemove: _propTypes.default.func
};
