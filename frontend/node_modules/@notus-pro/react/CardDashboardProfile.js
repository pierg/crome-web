"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = CardDashboardProfile;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactRouterDom = require("react-router-dom");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

// components
function CardDashboardProfile(_ref) {
  var image = _ref.image,
      name = _ref.name,
      stats = _ref.stats,
      description = _ref.description,
      showMore = _ref.showMore,
      location = _ref.location,
      achievements = _ref.achievements;
  var newDescription = [];

  if (!Array.isArray(description)) {
    newDescription = [description];
  } else {
    newDescription = description;
  }

  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
    className: "relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-lg rounded-lg mt-16"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "px-6"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "flex flex-wrap justify-center"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "w-full flex justify-center"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "relative"
  }, /*#__PURE__*/_react.default.createElement("img", {
    alt: "...",
    src: image,
    className: "shadow-xl rounded-full h-auto align-middle border-none absolute -m-16 -ml-20 lg:-ml-16 max-w-150-px"
  }))), /*#__PURE__*/_react.default.createElement("div", {
    className: "w-fulltext-center mt-20"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "flex justify-center lg:pt-4 pt-8 pb-0"
  }, stats.map(function (prop, key) {
    return /*#__PURE__*/_react.default.createElement("div", {
      key: key,
      className: "p-3 text-center"
    }, /*#__PURE__*/_react.default.createElement("span", {
      className: "text-xl font-bold block uppercase tracking-wide text-blueGray-700"
    }, prop.title), /*#__PURE__*/_react.default.createElement("span", {
      className: "text-sm text-blueGray-400"
    }, prop.subtitle));
  })))), /*#__PURE__*/_react.default.createElement("div", {
    className: "text-center mt-2"
  }, /*#__PURE__*/_react.default.createElement("h3", {
    className: "text-xl font-bold leading-normal mb-2"
  }, name), location && /*#__PURE__*/_react.default.createElement("div", {
    className: "text-xs mt-0 mb-2 text-blueGray-400 font-bold uppercase"
  }, /*#__PURE__*/_react.default.createElement("i", {
    className: "fas fa-map-marker-alt mr-2 text-blueGray-400 opacity-75"
  }), location)), /*#__PURE__*/_react.default.createElement("div", {
    className: "mt-6 py-6 border-t border-blueGray-200 text-center"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "flex flex-wrap justify-center"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "w-full px-4"
  }, newDescription.map(function (prop, key) {
    return /*#__PURE__*/_react.default.createElement("p", {
      key: key,
      className: "font-light leading-relaxed mb-4"
    }, prop);
  }), showMore && showMore.to ? /*#__PURE__*/_react.default.createElement(_reactRouterDom.Link, _extends({}, showMore, {
    className: "font-normal text-lightBlue-500 hover:text-lightBlue-600"
  })) : /*#__PURE__*/_react.default.createElement("a", _extends({}, showMore, {
    className: "font-normal text-lightBlue-500 hover:text-lightBlue-600"
  }))))))));
}

CardDashboardProfile.defaultProps = {
  stats: [],
  achievements: [],
  showMore: {}
};
CardDashboardProfile.propTypes = {
  image: _propTypes.default.string,
  name: _propTypes.default.string,
  location: _propTypes.default.string,
  // You send a simple string for a one paragraph description
  // or you can send an array of strings, that will generate
  // each string into a new paragraph
  description: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.arrayOf(_propTypes.default.string)]),
  // properties to pass to the link object
  // if you pass a prop named to, the link will be
  // generated using Link from react-router-dom
  showMore: _propTypes.default.object,
  stats: _propTypes.default.arrayOf(_propTypes.default.shape({
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string
  })),
  achievements: _propTypes.default.arrayOf(_propTypes.default.shape({
    icon: _propTypes.default.string,
    text: _propTypes.default.string
  }))
};
