"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Pricing8;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactRouterDom = require("react-router-dom");

var _Heading2Badge = _interopRequireDefault(require("./Heading2Badge.js"));

var _Button = _interopRequireDefault(require("./Button.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function Pricing8(_ref) {
  var heading2badge = _ref.heading2badge,
      table = _ref.table,
      color = _ref.color;
  var linkColors = {
    blueGray: "text-blueGray-500",
    red: "text-red-500",
    orange: "text-orange-500",
    amber: "text-amber-500",
    emerald: "text-emerald-500",
    teal: "text-teal-500",
    lightBlue: "text-lightBlue-500",
    indigo: "text-indigo-500",
    purple: "text-purple-500",
    pink: "text-pink-500"
  };
  var bgColors = {
    blueGray: "bg-blueGray-500",
    red: "bg-red-500",
    orange: "bg-orange-500",
    amber: "bg-amber-500",
    emerald: "bg-emerald-500",
    teal: "bg-teal-500",
    lightBlue: "bg-lightBlue-500",
    indigo: "bg-indigo-500",
    purple: "bg-purple-500",
    pink: "bg-pink-500"
  };
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
    className: "mb-12"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "container mx-auto px-4"
  }, heading2badge && /*#__PURE__*/_react.default.createElement(_Heading2Badge.default, heading2badge), /*#__PURE__*/_react.default.createElement("div", {
    className: "items-center flex flex-wrap -mx-4"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "px-4 relative w-full"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "block w-full overflow-x-auto"
  }, /*#__PURE__*/_react.default.createElement("table", {
    className: "w-full mb-4 text-blueGray-800 border-collapse"
  }, /*#__PURE__*/_react.default.createElement("thead", {
    className: "text-blueGray-700"
  }, /*#__PURE__*/_react.default.createElement("tr", {
    className: "border-b"
  }, table.head.map(function (prop, key) {
    return prop.image && /*#__PURE__*/_react.default.createElement("th", {
      key: key,
      className: "align-bottom p-3 border-t"
    }, /*#__PURE__*/_react.default.createElement("img", {
      alt: "...",
      src: prop.image,
      className: "w-170-px"
    })) || prop.title && prop.button && prop.link && /*#__PURE__*/_react.default.createElement("th", {
      key: key,
      className: "text-center align-bottom p-3 border-t"
    }, /*#__PURE__*/_react.default.createElement("h5", {
      className: "mb-3 text-xl leading-tight"
    }, prop.title), /*#__PURE__*/_react.default.createElement(_Button.default, prop.button), /*#__PURE__*/_react.default.createElement("br", null), prop.link.to && /*#__PURE__*/_react.default.createElement(_reactRouterDom.Link, _extends({}, prop.link, {
      className: linkColors[color] + " font-normal text-sm"
    })), prop.link.to === undefined && /*#__PURE__*/_react.default.createElement("a", _extends({}, prop.link, {
      className: linkColors[color] + " font-normal text-sm"
    })));
  }))), /*#__PURE__*/_react.default.createElement("tbody", {
    className: "text-blueGray-500"
  }, table.body.map(function (prop, key) {
    return prop && prop.line ? /*#__PURE__*/_react.default.createElement("tr", {
      key: key,
      className: bgColors[color] + " text-white px-4"
    }, /*#__PURE__*/_react.default.createElement("td", {
      className: "py-2 px-3 font-bold",
      colSpan: table.head.length
    }, prop.line)) : /*#__PURE__*/_react.default.createElement("tr", {
      key: key,
      className: "px-4"
    }, (prop || []).map(function (colProp, colKey) {
      return typeof colProp === "string" && /*#__PURE__*/_react.default.createElement("td", {
        key: colKey,
        className: (colKey !== 0 ? "text-center " : "px-3 text-left ") + "py-4 border-t text-sm"
      }, colProp) || colProp.icon && colProp.color && /*#__PURE__*/_react.default.createElement("td", {
        key: colKey,
        className: "text-center py-4 border-t"
      }, /*#__PURE__*/_react.default.createElement("i", {
        className: linkColors[colProp.color] + " text-lg " + colProp.icon
      })) || colProp.link && colProp.link.to && /*#__PURE__*/_react.default.createElement("td", {
        key: colKey,
        className: (colKey !== 0 ? "text-center " : "px-3 text-left ") + "py-4 border-t text-sm"
      }, /*#__PURE__*/_react.default.createElement(_reactRouterDom.Link, _extends({}, colProp.link, {
        className: linkColors[color]
      }))) || colProp.link && colProp.link.to === undefined && /*#__PURE__*/_react.default.createElement("td", {
        key: colKey,
        className: (colKey !== 0 ? "text-center " : "px-3 text-left ") + "py-4 border-t"
      }, /*#__PURE__*/_react.default.createElement("a", _extends({}, colProp.link, {
        className: linkColors[color]
      })));
    }));
  })))))))));
}

Pricing8.defaultProps = {
  table: {
    head: [],
    body: []
  },
  color: "blueGray",
  heading2badge: null
};
Pricing8.propTypes = {
  // prop to pass to the Heading2Badge component
  heading2badge: _propTypes.default.object,
  // this color will be applied on all
  // links and on the section background
  color: _propTypes.default.oneOf(["blueGray", "red", "orange", "amber", "emerald", "teal", "lightBlue", "indigo", "purple", "pink"]),
  // NOTE: the head and the body's arrays should
  // // // have the same ammount of elements, otherwise
  // // // the output will not be the one expected
  table: _propTypes.default.shape({
    head: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.shape({
      image: _propTypes.default.string
    }), _propTypes.default.shape({
      title: _propTypes.default.string,
      // props to pass to the Button component
      button: _propTypes.default.object,
      // properties to pass to the link object
      // if you pass a prop named to, the link will be
      // generated using Link from react-router-dom
      link: _propTypes.default.object
    })])),
    body: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.shape({
      // this will generate a single line with
      // the mentioned string, and the mentioned color
      // this acts like a section line
      line: _propTypes.default.string
    }), _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.shape({
      // properties to pass to the link object
      // if you pass a prop named to, the link will be
      // generated using Link from react-router-dom
      link: _propTypes.default.object
    }), _propTypes.default.shape({
      icon: _propTypes.default.string,
      color: _propTypes.default.oneOf(["blueGray", "red", "orange", "amber", "emerald", "teal", "lightBlue", "indigo", "purple", "pink"])
    })]))]))
  })
};
