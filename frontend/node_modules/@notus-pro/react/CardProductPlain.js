"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = CardProductPlain;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactRouterDom = require("react-router-dom");

var _Badge = _interopRequireDefault(require("./Badge.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function CardProductPlain(_ref) {
  var type = _ref.type,
      image = _ref.image,
      title = _ref.title,
      price = _ref.price,
      badge = _ref.badge,
      link = _ref.link;
  var types = {
    border: "bg-white shadow-lg rounded",
    borderless: "bg-transparent"
  };
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
    className: "relative flex flex-col min-w-0 break-words w-full " + types[type]
  }, /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement("div", {
    className: "h-8 text-center"
  }, badge && /*#__PURE__*/_react.default.createElement(_Badge.default, badge)), /*#__PURE__*/_react.default.createElement("img", {
    alt: "...",
    src: image,
    className: "w-full p-6"
  })), /*#__PURE__*/_react.default.createElement("div", {
    className: "p-6 flex-auto text-center"
  }, /*#__PURE__*/_react.default.createElement("h5", {
    className: "text-2xl font-bold mt-0"
  }, link && link.to ? /*#__PURE__*/_react.default.createElement(_reactRouterDom.Link, _extends({}, link, {
    className: ""
  }), title) : /*#__PURE__*/_react.default.createElement("a", _extends({}, link, {
    className: ""
  }), title)), price && price.old && price.new ? /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("span", {
    className: "text-blueGray-700 text-lg line-through mr-2"
  }, price.old), /*#__PURE__*/_react.default.createElement("span", {
    className: "text-red-500 font-semibold text-lg"
  }, price.new)) : /*#__PURE__*/_react.default.createElement("span", {
    className: "text-blueGray-700 text-lg"
  }, price))));
}

CardProductPlain.defaultProps = {
  link: {},
  type: "border"
};
CardProductPlain.propTypes = {
  image: _propTypes.default.string,
  title: _propTypes.default.string,
  type: _propTypes.default.oneOf(["border", "borderless"]),
  price: _propTypes.default.oneOfType([// this is a simple price tag
  _propTypes.default.string, // this is to show a new price with an old one
  _propTypes.default.shape({
    old: _propTypes.default.string,
    new: _propTypes.default.string
  })]),
  // props to pass to the Badge component
  badge: _propTypes.default.object,
  // properties to pass to the link object that wraps the title
  // if you pass a prop named to, the link will be
  // generated using Link from react-router-dom
  link: _propTypes.default.object
};
