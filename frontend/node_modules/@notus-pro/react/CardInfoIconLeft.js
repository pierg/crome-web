"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = CardInfoIconLeft;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactRouterDom = require("react-router-dom");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function CardInfoIconLeft(_ref) {
  var icon = _ref.icon,
      color = _ref.color,
      title = _ref.title,
      description = _ref.description,
      link = _ref.link,
      inverted = _ref.inverted;
  var iconColor = {
    light: "bg-blueGray-200 text-blueGray-800",
    dark: "bg-blueGray-800 text-blueGray-100",
    blueGray: "bg-blueGray-500 text-white",
    red: "bg-red-500 text-white",
    orange: "bg-orange-500 text-white",
    amber: "bg-amber-500 text-white",
    emerald: "bg-emerald-500 text-white",
    teal: "bg-teal-500 text-white",
    lightBlue: "bg-lightBlue-500 text-white",
    indigo: "bg-indigo-500 text-white",
    purple: "bg-purple-500 text-white",
    pink: "bg-pink-500 text-white",
    "light-inverted": "text-blueGray-200 bg-blueGray-800",
    "dark-inverted": "text-blueGray-800 bg-blueGray-100",
    "blueGray-inverted": "text-blueGray-500 bg-white",
    "red-inverted": "text-red-500 bg-white",
    "orange-inverted": "text-orange-500 bg-white",
    "amber-inverted": "text-amber-500 bg-white",
    "emerald-inverted": "text-emerald-500 bg-white",
    "teal-inverted": "text-teal-500 bg-white",
    "lightBlue-inverted": "text-lightBlue-500 bg-white",
    "indigo-inverted": "text-indigo-500 bg-white",
    "purple-inverted": "text-purple-500 bg-white",
    "pink-inverted": "text-pink-500 bg-white"
  };
  var textColor = {
    light: "text-blueGray-400",
    dark: "text-blueGray-800",
    blueGray: "text-blueGray-500",
    red: "text-red-500",
    orange: "text-orange-500",
    amber: "text-amber-500",
    emerald: "text-emerald-500",
    teal: "text-teal-500",
    lightBlue: "text-lightBlue-500",
    indigo: "text-indigo-500",
    purple: "text-purple-500",
    pink: "text-pink-500",
    "light-inverted": "text-blueGray-800",
    "dark-inverted": "text-white",
    "blueGray-inverted": "text-white",
    "red-inverted": "text-white",
    "orange-inverted": "text-white",
    "amber-inverted": "text-white",
    "emerald-inverted": "text-white",
    "teal-inverted": "text-white",
    "lightBlue-inverted": "text-white",
    "indigo-inverted": "text-white",
    "purple-inverted": "text-white",
    "pink-inverted": "text-white"
  };
  var cardColors = {
    "light-inverted": "bg-blueGray-400 text-blueGray-800",
    "dark-inverted": "bg-blueGray-800 text-white",
    "blueGray-inverted": "bg-blueGray-500 text-white",
    "red-inverted": "bg-red-500 text-white",
    "orange-inverted": "bg-orange-500 text-white",
    "amber-inverted": "bg-amber-500 text-white",
    "emerald-inverted": "bg-emerald-500 text-white",
    "teal-inverted": "bg-teal-500 text-white",
    "lightBlue-inverted": "bg-lightBlue-500 text-white",
    "indigo-inverted": "bg-indigo-500 text-white",
    "purple-inverted": "bg-purple-500 text-white",
    "pink-inverted": "bg-pink-500 text-white",
    light: "bg-white text-blueGray-800",
    dark: "bg-white text-blueGray-800",
    blueGray: "bg-white text-blueGray-800",
    red: "bg-white text-blueGray-800",
    orange: "bg-white text-blueGray-800",
    amber: "bg-white text-blueGray-800",
    emerald: "bg-white text-blueGray-800",
    teal: "bg-white text-blueGray-800",
    lightBlue: "bg-white text-blueGray-800",
    indigo: "bg-white text-blueGray-800",
    purple: "bg-white text-blueGray-800",
    pink: "bg-white text-blueGray-800"
  };
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
    className: cardColors[color + (inverted ? "-inverted" : "")] + " rounded-lg text-left p-6 flex items-start"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: iconColor[color + (inverted ? "-inverted" : "")] + " shadow-lg rounded-full justify-center items-center inline-flex text-center p-2 text-xl w-12 h-12"
  }, /*#__PURE__*/_react.default.createElement("i", {
    className: icon
  })), /*#__PURE__*/_react.default.createElement("div", {
    className: "ml-6 flex-1"
  }, /*#__PURE__*/_react.default.createElement("h6", {
    className: textColor[color + (inverted ? "-inverted" : "")] + " text-xl font-bold mt-3 mb-0"
  }, title), /*#__PURE__*/_react.default.createElement("p", {
    className: (inverted ? "text-white opacity-75" : "text-blueGray-500") + " mt-2 mb-4 leading-relaxed"
  }, description), link && link.to && /*#__PURE__*/_react.default.createElement(_reactRouterDom.Link, _extends({}, link, {
    className: textColor[color + (inverted ? "-inverted" : "")]
  })), link && link.to === undefined && /*#__PURE__*/_react.default.createElement("a", _extends({}, link, {
    className: textColor[color + (inverted ? "-inverted" : "")]
  })))));
}

CardInfoIconLeft.defaultProps = {
  color: "blueGray",
  link: {},
  inverted: false
};
CardInfoIconLeft.propTypes = {
  // icon name to be added on the <i></i> tag, for example "fa fa-heart"
  icon: _propTypes.default.string.isRequired,
  // the background of the icon
  color: _propTypes.default.oneOf(["light", "dark", "blueGray", "red", "orange", "amber", "emerald", "teal", "lightBlue", "indigo", "purple", "pink"]),
  // if true, than the color will go as background
  // for the whole card, not only the icon
  inverted: _propTypes.default.bool,
  // if the background should have a gradient
  title: _propTypes.default.string,
  description: _propTypes.default.string,
  // props to pass to the anchor as object
  // if you pass a prop "to" it will be
  // generated as a Link from react-router-dom
  // otherwise as an <a> tag
  link: _propTypes.default.object
};
