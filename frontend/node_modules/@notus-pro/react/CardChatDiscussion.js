"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = CardChatDiscussion;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Input = _interopRequireDefault(require("./Input.js"));

var _Button = _interopRequireDefault(require("./Button.js"));

var _Message = _interopRequireDefault(require("./Message.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function CardChatDiscussion(_ref) {
  var image = _ref.image,
      name = _ref.name,
      lastOnline = _ref.lastOnline,
      input = _ref.input,
      buttons = _ref.buttons,
      messages = _ref.messages;
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
    className: "flex justify-center border-0 flex-col min-w-0 break-words bg-white w-full mb-6 shadow-xl rounded-lg"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "bg-blueGray-800 inline-block rounded-t-lg px-5 py-3"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "py-4 flex flex-row justify-between"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "flex items-center"
  }, /*#__PURE__*/_react.default.createElement("img", {
    src: image,
    className: "rounded-full mr-4 max-w-64-px",
    alt: "..."
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: "text-left flex-1"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "justify-between items-center"
  }, /*#__PURE__*/_react.default.createElement("h5", {
    className: "text-2xl text-white font-semibold leading-tight"
  }, name), /*#__PURE__*/_react.default.createElement("span", {
    className: "text-blueGray-500"
  }, /*#__PURE__*/_react.default.createElement("span", {
    className: "mr-2"
  }, lastOnline), lastOnline === "Online" && /*#__PURE__*/_react.default.createElement("span", {
    className: "p-1 text-xs font-semibold inline-block uppercase last:mr-0 mr-1 p-1 rounded-full bg-emerald-400"
  }), lastOnline === "Offline" && /*#__PURE__*/_react.default.createElement("span", {
    className: "p-1 text-xs font-semibold inline-block uppercase last:mr-0 mr-1 p-1 rounded-full bg-red-400"
  }))))), /*#__PURE__*/_react.default.createElement("div", null, buttons.map(function (prop, key) {
    return /*#__PURE__*/_react.default.createElement(_Button.default, _extends({
      key: key
    }, prop));
  })))), /*#__PURE__*/_react.default.createElement("div", {
    className: "px-4 flex flex-col-reverse flex-auto max-h-screen-70 overflow-auto overflow-x-hidden bg-blueGray-200"
  }, messages.map(function (prop, key) {
    return prop.divider !== undefined ? /*#__PURE__*/_react.default.createElement("div", {
      key: key,
      className: "mt-6 flex flex-wrap -mx-4"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "px-4 relative w-full lg:w-full"
    }, /*#__PURE__*/_react.default.createElement("span", {
      className: "text-blueGray-500 font-semibold flex justify-center mt-4"
    }, prop.divider))) : /*#__PURE__*/_react.default.createElement(_Message.default, _extends({
      key: key
    }, prop));
  })), /*#__PURE__*/_react.default.createElement("div", {
    className: "bg-white rounded-b-lg px-4 py-3 border-t border-blueGray-300"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "my-4 mb-3 pt-0 relative"
  }, /*#__PURE__*/_react.default.createElement(_Input.default, input)))));
}

CardChatDiscussion.defaultProps = {
  input: {},
  messages: [],
  buttons: []
};
CardChatDiscussion.propTypes = {
  image: _propTypes.default.string,
  name: _propTypes.default.string,
  // if Online, then a emerald bullet will appear near it
  // if Offline, then a red bullet will appear near it
  lastOnline: _propTypes.default.string,
  // array of props to pass to the Button component
  buttons: _propTypes.default.arrayOf(_propTypes.default.object),
  // props to pass to the Input component
  input: _propTypes.default.object,
  messages: _propTypes.default.arrayOf(_propTypes.default.oneOfType([// array of props to pass to the Message component
  _propTypes.default.object, // this will be generated as a date divider
  _propTypes.default.shape({
    divider: _propTypes.default.string
  })]))
};
