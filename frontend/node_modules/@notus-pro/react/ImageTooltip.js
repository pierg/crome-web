"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ImageTooltip;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _core = require("@popperjs/core");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function ImageTooltip(_ref) {
  var image = _ref.image,
      text = _ref.text;

  var _React$useState = _react.default.useState(false),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      tooltipShow = _React$useState2[0],
      setTooltipShow = _React$useState2[1];

  var btnRef = /*#__PURE__*/_react.default.createRef();

  var tooltipRef = /*#__PURE__*/_react.default.createRef();

  var openLeftTooltip = function openLeftTooltip() {
    (0, _core.createPopper)(btnRef.current, tooltipRef.current, {
      placement: "top"
    });
    setTooltipShow(true);
  };

  var closeLeftTooltip = function closeLeftTooltip() {
    setTooltipShow(false);
  };

  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("img", {
    ref: btnRef,
    alt: "...",
    className: "rounded-full w-full",
    src: image,
    onMouseEnter: openLeftTooltip,
    onMouseLeave: closeLeftTooltip
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: tooltipShow ? "block" : "hidden ",
    ref: tooltipRef
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "border-0 mb-3 block z-50 font-normal leading-normal text-sm text-left no-underline break-words rounded"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "py-1 px-2 text-center rounded text-white bg-black"
  }, text))));
}

ImageTooltip.defaultProps = {};
ImageTooltip.propTypes = {
  image: _propTypes.default.string,
  text: _propTypes.default.string
};
