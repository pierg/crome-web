"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Map;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function Map(_ref) {
  var options = _ref.options,
      latitude = _ref.latitude,
      longitude = _ref.longitude;

  var mapRef = _react.default.useRef(null);

  _react.default.useEffect(function () {
    var google = window.google;
    var map = mapRef.current;
    var lat = map.getAttribute("data-lat");
    var lng = map.getAttribute("data-lng");
    var myLatlng = new google.maps.LatLng(lat, lng);

    var mapOptions = _objectSpread({}, options);

    map = new google.maps.Map(map, mapOptions);
    var marker = new google.maps.Marker({
      position: myLatlng,
      map: map,
      animation: google.maps.Animation.DROP,
      title: "Notus PRO React!"
    });
    var contentString = '<div class="info-window-content"><h2>Notus PRO React</h2>' + "<p>A premium UI Kit and Admin for Tailwind CSS and React.</p></div>";
    var infowindow = new google.maps.InfoWindow({
      content: contentString
    });
    google.maps.event.addListener(marker, "click", function () {
      infowindow.open(map, marker);
    });
  });

  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
    ref: mapRef,
    className: "relative w-full h-500-px rounded-inherit",
    "data-lat": latitude,
    "data-lng": longitude
  }));
}

Map.defaultProps = {
  options: {},
  latitude: "40.748817",
  longitude: "-73.985428"
};
Map.propTypes = {
  // Object representing the options you can send to the googlemaps
  // Read more here: https://developers.google.com/maps/documentation/javascript/reference/map#MapOptions
  options: _propTypes.default.object,
  latitude: _propTypes.default.string,
  longitude: _propTypes.default.string
};
