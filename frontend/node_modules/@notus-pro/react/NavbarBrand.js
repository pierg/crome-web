"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = NavbarBrand;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _reactRouterDom = require("react-router-dom");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function NavbarBrand(_ref) {
  var type = _ref.type,
      className = _ref.className,
      to = _ref.to,
      rest = _objectWithoutProperties(_ref, ["type", "className", "to"]);

  var types = {
    light: "text-white",
    dark: "text-blueGray-800"
  };
  var classes = (0, _classnames.default)("text-sm font-bold leading-relaxed inline-flex items-center mr-4 py-2 whitespace-nowrap uppercase", className, types[type]);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, to && /*#__PURE__*/_react.default.createElement(_reactRouterDom.Link, _extends({}, rest, {
    className: classes,
    to: to
  })), to === undefined && /*#__PURE__*/_react.default.createElement("a", _extends({}, rest, {
    className: classes
  })));
}

NavbarBrand.defaultProps = {
  type: "light",
  className: ""
}; // you can pass any other props that you might pass to
// the <a> tag or to the <Link> component from react-router-dom

NavbarBrand.propTypes = {
  children: _propTypes.default.node,
  className: _propTypes.default.string,
  // light is for white text
  // dark is for text-blueGray-800
  type: _propTypes.default.oneOf(["light", "dark"])
};
