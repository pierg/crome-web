"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = InfoAreaIconTitleLink;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactRouterDom = require("react-router-dom");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable react/jsx-no-target-blank */
// components
function InfoAreaIconTitleLink(_ref) {
  var icon = _ref.icon,
      iconColor = _ref.iconColor,
      title = _ref.title,
      description = _ref.description,
      link = _ref.link;
  var newDescription = [];

  if (!Array.isArray(description)) {
    newDescription = [description];
  } else {
    newDescription = description;
  }

  var iconBgColor = {
    blueGray: "text-blueGray-500 bg-white",
    red: "text-red-500 bg-red-100",
    orange: "text-orange-500 bg-orange-100",
    amber: "text-amber-500 bg-amber-100",
    emerald: "text-emerald-500 bg-emerald-100",
    teal: "text-teal-500 bg-teal-100",
    lightBlue: "text-lightBlue-500 bg-lightBlue-100",
    indigo: "text-indigo-500 bg-indigo-100",
    purple: "text-purple-500 bg-purple-100",
    pink: "text-pink-500 bg-pink-100"
  };
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
    className: iconBgColor[iconColor] + " p-3 text-center inline-flex items-center justify-center w-16 h-16 mb-6 shadow-lg rounded-full"
  }, /*#__PURE__*/_react.default.createElement("i", {
    className: icon + " text-xl"
  })), /*#__PURE__*/_react.default.createElement("h3", {
    className: "text-3xl mb-2 font-semibold leading-normal"
  }, title), newDescription.map(function (prop, key) {
    return /*#__PURE__*/_react.default.createElement("p", {
      className: "text-lg font-light leading-relaxed mt-4 mb-4 text-blueGray-700",
      key: key
    }, prop);
  }), link && link.innerLink ? /*#__PURE__*/_react.default.createElement(_reactRouterDom.Link, {
    to: link.link,
    className: "font-bold text-blueGray-800 mt-8"
  }, link.text) : link && !link.innerLink ? /*#__PURE__*/_react.default.createElement("a", {
    href: link.link,
    target: "_blank",
    className: "font-bold text-blueGray-800 mt-8"
  }, link.text) : null);
}

InfoAreaIconTitleLink.defaultProps = {
  iconColor: "blueGray",
  description: [],
  link: {}
};
InfoAreaIconTitleLink.propTypes = {
  // icon name to be added on the <i></i> tag, for example "fa fa-heart"
  icon: _propTypes.default.string.isRequired,
  // the background of the icon
  iconColor: _propTypes.default.oneOf(["blueGray", "red", "orange", "amber", "emerald", "teal", "lightBlue", "indigo", "purple", "pink"]),
  title: _propTypes.default.string,
  description: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.arrayOf(_propTypes.default.string)]),
  link: _propTypes.default.shape({
    text: _propTypes.default.string.isRequired,
    // where the user should be redirected on click
    link: _propTypes.default.string.isRequired,
    // if innerLink is set to false
    // then the link will be generated as simple <a> a tag with target="_blank"
    // if not, it will be generated as a <Link> tag from react-router-dom
    innerLink: _propTypes.default.bool.isRequired
  })
};
