"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = CardContactUsHorizontal;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Button = _interopRequireDefault(require("./Button.js"));

var _Input = _interopRequireDefault(require("./Input.js"));

var _Select = _interopRequireDefault(require("./Select.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function CardContactUsHorizontal(_ref) {
  var title = _ref.title,
      left = _ref.left,
      right = _ref.right,
      color = _ref.color;
  var colors = {
    blueGray: "bg-blueGray-500 text-blueGray-500",
    red: "bg-red-500 text-red-500",
    orange: "bg-orange-500 text-orange-500",
    amber: "bg-amber-500 text-amber-500",
    emerald: "bg-emerald-500 text-emerald-500",
    teal: "bg-teal-500 text-teal-500",
    lightBlue: "bg-lightBlue-500 text-lightBlue-500",
    indigo: "bg-indigo-500 text-indigo-500",
    purple: "bg-purple-500 text-purple-500",
    pink: "bg-pink-500 text-pink-500"
  };
  var width = {
    1: "w-1/12",
    2: "w-2/12",
    3: "w-3/12",
    4: "w-4/12",
    5: "w-5/12",
    6: "w-6/12",
    7: "w-7/12",
    8: "w-8/12",
    9: "w-9/12",
    10: "w-10/12",
    11: "w-11/12",
    12: "w-full"
  };
  var sm = {
    1: "sm:w-1/12",
    2: "sm:w-2/12",
    3: "sm:w-3/12",
    4: "sm:w-4/12",
    5: "sm:w-5/12",
    6: "sm:w-6/12",
    7: "sm:w-7/12",
    8: "sm:w-8/12",
    9: "sm:w-9/12",
    10: "sm:w-10/12",
    11: "sm:w-11/12",
    12: "sm:w-full"
  };
  var md = {
    1: "md:w-1/12",
    2: "md:w-2/12",
    3: "md:w-3/12",
    4: "md:w-4/12",
    5: "md:w-5/12",
    6: "md:w-6/12",
    7: "md:w-7/12",
    8: "md:w-8/12",
    9: "md:w-9/12",
    10: "md:w-10/12",
    11: "md:w-11/12",
    12: "md:w-full"
  };
  var lg = {
    1: "lg:w-1/12",
    2: "lg:w-2/12",
    3: "lg:w-3/12",
    4: "lg:w-4/12",
    5: "lg:w-5/12",
    6: "lg:w-6/12",
    7: "lg:w-7/12",
    8: "lg:w-8/12",
    9: "lg:w-9/12",
    10: "lg:w-10/12",
    11: "lg:w-11/12",
    12: "lg:w-full"
  };
  var xl = {
    1: "xl:w-1/12",
    2: "xl:w-2/12",
    3: "xl:w-3/12",
    4: "xl:w-4/12",
    5: "xl:w-5/12",
    6: "xl:w-6/12",
    7: "xl:w-7/12",
    8: "xl:w-8/12",
    9: "xl:w-9/12",
    10: "xl:w-10/12",
    11: "xl:w-11/12",
    12: "xl:w-full"
  };
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
    className: "shadow-lg rounded-lg relative flex flex-col min-w-0 break-words bg-white w-full mb-6"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "flex flex-wrap"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "p-6 relative w-full lg:w-8/12 md:w-7/12"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "pb-4 border-b border-blueGray-300"
  }, /*#__PURE__*/_react.default.createElement("h4", {
    className: "text-xl font-bold leading-tight mt-0"
  }, left.title), /*#__PURE__*/_react.default.createElement("p", {
    className: "mt-1 text-blueGray-500"
  }, left.subtitle)), /*#__PURE__*/_react.default.createElement("div", {
    className: "pt-6 flex-auto"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "flex flex-wrap -mx-4"
  }, left.inputs.map(function (prop, key) {
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "px-4 relative " + (width[prop.width] || "w-full") + " " + (sm[prop.sm] || "") + " " + (md[prop.md] || "") + " " + (lg[prop.lg] || "") + " " + (xl[prop.xl] || ""),
      key: key
    }, (prop.input || prop.select) && /*#__PURE__*/_react.default.createElement("div", {
      className: "mb-3 pt-0 relative"
    }, prop.label && /*#__PURE__*/_react.default.createElement("label", {
      className: "block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1 mt-2"
    }, prop.label), prop.input && /*#__PURE__*/_react.default.createElement(_Input.default, prop.input), prop.select && /*#__PURE__*/_react.default.createElement(_Select.default, prop.select)));
  })), /*#__PURE__*/_react.default.createElement("div", {
    className: "w-full text-center md:text-right mt-2"
  }, /*#__PURE__*/_react.default.createElement(_Button.default, left.button)))), /*#__PURE__*/_react.default.createElement("div", {
    className: "relative w-full lg:w-4/12 md:w-5/12"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: colors[color] + " text-left h-full w-full flex items-center justify-center rounded-r-none rounded-b md:rounded-b-none md:rounded-r"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "p-6"
  }, /*#__PURE__*/_react.default.createElement("h4", {
    className: "text-2xl font-bold leading-tight text-center text-white"
  }, right.title), /*#__PURE__*/_react.default.createElement("p", {
    className: "mt-1 text-white opacity-75 text-lg text-center"
  }, right.subtitle), right.list.map(function (prop, key) {
    return /*#__PURE__*/_react.default.createElement("div", {
      key: key,
      className: "text-left w-full my-6 items-center flex items-center"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "bg-white shadow-lg rounded-full justify-center items-center inline-flex text-center w-10 h-10"
    }, /*#__PURE__*/_react.default.createElement("i", {
      className: prop.icon
    })), /*#__PURE__*/_react.default.createElement("p", {
      className: "ml-3 text-white"
    }, prop.text));
  })))))));
}

var widthTypes = {
  // The width the component should have by default
  // if this is not set, then it is defaulted to 100% (w-full)
  width: _propTypes.default.oneOf([1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12]),
  // The width the input should have on sm breakpoint
  sm: _propTypes.default.oneOf([1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12]),
  // The width the input should have on md breakpoint
  md: _propTypes.default.oneOf([1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12]),
  // The width the input should have on lg breakpoint
  lg: _propTypes.default.oneOf([1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12]),
  // The width the input should have on xl breakpoint
  xl: _propTypes.default.oneOf([1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12])
};

var inputsTypes = _propTypes.default.shape(_objectSpread(_objectSpread({}, widthTypes), {}, {
  label: _propTypes.default.string,
  // It is represetnted by the props you
  // can pass to our Input component element
  // NOTE: if you wish to generate a textarea, you will need to pass
  // // // inside this object >> type: "textarea"
  // // // full example >> input: { type: "textarea" }
  input: _propTypes.default.object
}));

var selectTypes = _propTypes.default.shape(_objectSpread(_objectSpread({}, widthTypes), {}, {
  label: _propTypes.default.string,
  // It is represetnted by the props you
  // can pass to our Select component element
  select: _propTypes.default.object
}));

CardContactUsHorizontal.defaultProps = {
  left: {
    inputs: [],
    button: {}
  },
  right: {
    list: []
  },
  color: "blueGray"
};
CardContactUsHorizontal.propTypes = {
  left: _propTypes.default.shape({
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    // props to pass to the Button component
    button: _propTypes.default.object,
    inputs: _propTypes.default.arrayOf(_propTypes.default.oneOfType([inputsTypes, selectTypes]))
  }),
  right: _propTypes.default.shape({
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    list: _propTypes.default.arrayOf(_propTypes.default.shape({
      icon: _propTypes.default.string,
      text: _propTypes.default.string
    }))
  }),
  // color for the right part
  color: _propTypes.default.oneOf(["blueGray", "red", "orange", "amber", "emerald", "teal", "lightBlue", "indigo", "purple", "pink"])
};
