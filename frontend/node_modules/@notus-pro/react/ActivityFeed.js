"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ActivityFeed;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactRouterDom = require("react-router-dom");

var _Button = _interopRequireDefault(require("./Button.js"));

var _ImagesOverlap = _interopRequireDefault(require("./ImagesOverlap.js"));

var _WriteComment = _interopRequireDefault(require("./WriteComment.js"));

var _Comment = _interopRequireDefault(require("./Comment.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ActivityFeed(_ref) {
  var title = _ref.title,
      user = _ref.user,
      username = _ref.username,
      date = _ref.date,
      button = _ref.button,
      description = _ref.description,
      image = _ref.image,
      likes = _ref.likes,
      comments = _ref.comments,
      shares = _ref.shares,
      imagesoverlap = _ref.imagesoverlap,
      loadPrevious = _ref.loadPrevious,
      loadNext = _ref.loadNext,
      writeComment = _ref.writeComment,
      commentPosts = _ref.commentPosts;
  var newDescription = [];

  if (!Array.isArray(description)) {
    newDescription = [description];
  } else {
    newDescription = description;
  }

  var likesComponent = /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("i", {
    className: "fas fa-thumbs-up mr-1"
  }), /*#__PURE__*/_react.default.createElement("span", {
    className: "text-blueGray-500"
  }, likes.children));

  var commentsComponent = /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("i", {
    className: "fas fa-comment mr-1"
  }), /*#__PURE__*/_react.default.createElement("span", {
    className: "text-blueGray-500"
  }, comments.children));

  var sharesComponent = /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("i", {
    className: "fas fa-share mr-1"
  }), /*#__PURE__*/_react.default.createElement("span", {
    className: "text-blueGray-500"
  }, shares.children));

  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("section", {
    className: "relative py-12"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "container mx-auto px-4"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "flex flex-wrap -mx-4"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "mx-auto px-4 relative w-full md:w-6/12"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "shadow-lg rounded-lg relative flex flex-col min-w-0 break-words bg-white w-full p-5 shadow-lg"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "bg-transparent first:rounded-t pb-4"
  }, /*#__PURE__*/_react.default.createElement("h3", {
    className: "text-xl font-bold"
  }, title)), /*#__PURE__*/_react.default.createElement("div", {
    className: "flex items-center bg-transparent py-3 border-t border-blueGray-200"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "flex items-center my-2"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "flex items-start"
  }, /*#__PURE__*/_react.default.createElement("img", {
    src: user,
    className: "rounded-full mr-3 w-10 h-10 shadow",
    alt: "..."
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: "flex-1"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "justify-between items-center"
  }, /*#__PURE__*/_react.default.createElement("h5", {
    className: "mb-0 text-sm font-bold uppercase"
  }, username), /*#__PURE__*/_react.default.createElement("small", {
    className: "text-sm text-blueGray-400 mt-0"
  }, date))))), /*#__PURE__*/_react.default.createElement("div", {
    className: "ml-auto text-right"
  }, /*#__PURE__*/_react.default.createElement(_Button.default, button))), /*#__PURE__*/_react.default.createElement("div", {
    className: "flex-auto"
  }, newDescription.map(function (prop, key) {
    return /*#__PURE__*/_react.default.createElement("p", {
      className: "mb-6 text-blueGray-500 leading-relaxed",
      key: key
    }, prop);
  }), image && /*#__PURE__*/_react.default.createElement("img", {
    alt: "...",
    src: image,
    className: "max-w-full h-auto rounded-lg"
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: "items-center my-6 pb-6 border-b flex flex-wrap"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "px-4 relative w-full sm:w-6/12"
  }, /*#__PURE__*/_react.default.createElement("div", null, likes.to ? /*#__PURE__*/_react.default.createElement(_reactRouterDom.Link, _extends({}, likes, {
    className: "inline-block mr-3 text-blueGray-400 font-semibold text-sm"
  }), likesComponent) : /*#__PURE__*/_react.default.createElement("a", _extends({}, likes, {
    className: "inline-block mr-3 text-blueGray-400 font-semibold text-sm"
  }), likesComponent), comments.to ? /*#__PURE__*/_react.default.createElement(_reactRouterDom.Link, _extends({}, comments, {
    className: "inline-block mr-3 text-blueGray-400 font-semibold text-sm"
  }), commentsComponent) : /*#__PURE__*/_react.default.createElement("a", _extends({}, comments, {
    className: "inline-block mr-3 text-blueGray-400 font-semibold text-sm"
  }), commentsComponent), shares.to ? /*#__PURE__*/_react.default.createElement(_reactRouterDom.Link, _extends({}, shares, {
    className: "inline-block mr-3 text-blueGray-400 font-semibold text-sm"
  }), sharesComponent) : /*#__PURE__*/_react.default.createElement("a", _extends({}, shares, {
    className: "inline-block mr-3 text-blueGray-400 font-semibold text-sm"
  }), sharesComponent))), /*#__PURE__*/_react.default.createElement("div", {
    className: "sm:flex hidden px-4 relative w-full sm:w-6/12 sm:justify-end"
  }, /*#__PURE__*/_react.default.createElement(_ImagesOverlap.default, imagesoverlap))), /*#__PURE__*/_react.default.createElement("div", {
    className: "flex justify-center"
  }, loadPrevious && loadPrevious.to ? /*#__PURE__*/_react.default.createElement(_reactRouterDom.Link, _extends({}, loadPrevious, {
    className: "text-blueGray-500 text-sm hover:text-blueGray-700"
  }), "Load previous") : loadPrevious ? /*#__PURE__*/_react.default.createElement("a", _extends({}, loadPrevious, {
    className: "text-blueGray-500 text-sm hover:text-blueGray-700"
  }), "Load previous") : null), commentPosts.map(function (prop, key) {
    return /*#__PURE__*/_react.default.createElement(_Comment.default, _extends({}, prop, {
      key: key
    }));
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: "flex justify-center mt-4"
  }, loadNext && loadNext.to ? /*#__PURE__*/_react.default.createElement(_reactRouterDom.Link, _extends({}, loadNext, {
    className: "text-blueGray-500 text-sm hover:text-blueGray-700"
  }), "Load next") : loadNext ? /*#__PURE__*/_react.default.createElement("a", _extends({}, loadNext, {
    className: "text-blueGray-500 text-sm hover:text-blueGray-700"
  }), "Load next") : null), /*#__PURE__*/_react.default.createElement(_WriteComment.default, writeComment))))))));
}

ActivityFeed.defaultProps = {
  button: {},
  likes: {
    children: "0"
  },
  comments: {
    children: "0"
  },
  shares: {
    children: "0"
  },
  writeComment: {},
  commentPosts: []
};
ActivityFeed.propTypes = {
  title: _propTypes.default.string,
  user: _propTypes.default.string,
  username: _propTypes.default.string,
  date: _propTypes.default.string,
  // it is represented by the props
  // that can be passed to the Button,
  // so please check that one out
  button: _propTypes.default.object,
  // You send a simple string for a one paragraph description
  // or you can send an array of strings, that will generate
  // each string into a new paragraph
  description: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.arrayOf(_propTypes.default.string)]),
  // The image of the post, if not set the img tag will not be rendered
  image: _propTypes.default.string,
  // properties to pass to the link object
  // if you pass a prop named to, the link will be
  // generated using Link from react-router-dom
  // NOTE: the like icon is set by default,
  // // // you only need to set the number of like
  likes: _propTypes.default.object,
  // properties to pass to the link object
  // if you pass a prop named to, the link will be
  // generated using Link from react-router-dom
  // NOTE: the comment icon is set by default,
  // // // you only need to set the number of comments
  comments: _propTypes.default.object,
  // properties to pass to the link object
  // if you pass a prop named to, the link will be
  // generated using Link from react-router-dom
  // NOTE: the share icon is set by default,
  // // // you only need to set the number of comments
  shares: _propTypes.default.object,
  // it is represented by the props
  // that can be passed to the ImagesOverlap,
  // so please check that one out
  imagesoverlap: _propTypes.default.object,
  // properties to pass to the link object
  // if you pass a prop named to, the link will be
  // generated using Link from react-router-dom
  // NOTE: the "load previous" text is set by default,
  // // // you only need to set the href etc.
  // NOTE: If you do not pass this prop, it will not be generated
  loadPrevious: _propTypes.default.object,
  // properties to pass to the link object
  // if you pass a prop named to, the link will be
  // generated using Link from react-router-dom
  // NOTE: the "load next" text is set by default,
  // // // you only need to set the href etc.
  // NOTE: If you do not pass this prop, it will not be generated
  loadNext: _propTypes.default.object,
  // it is represented by the props
  // that can be passed to the WriteComment,
  // so please check that one out
  writeComment: _propTypes.default.object,
  // it is an array of objects, which
  // are represented by the props
  // that can be passed to the Comment,
  // so please check that one out
  commentPosts: _propTypes.default.arrayOf(_propTypes.default.object)
};
